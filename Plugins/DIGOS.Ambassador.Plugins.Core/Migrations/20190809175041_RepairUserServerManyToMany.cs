// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Core.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class RepairUserServerManyToMany : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Users_Servers_ServerID",
                schema: "Core",
                table: "Users");

            migrationBuilder.DropIndex(
                name: "IX_Users_ServerID",
                schema: "Core",
                table: "Users");

            migrationBuilder.DropColumn(
                name: "ServerID",
                schema: "Core",
                table: "Users");

            migrationBuilder.CreateTable(
                name: "ServerUser",
                schema: "Core",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn),
                    ServerID = table.Column<long>(nullable: false),
                    UserID = table.Column<long>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ServerUser", x => x.ID);
                    table.ForeignKey(
                        name: "FK_ServerUser_Servers_ServerID",
                        column: x => x.ServerID,
                        principalSchema: "Core",
                        principalTable: "Servers",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ServerUser_Users_UserID",
                        column: x => x.UserID,
                        principalSchema: "Core",
                        principalTable: "Users",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ServerUser_ServerID",
                schema: "Core",
                table: "ServerUser",
                column: "ServerID");

            migrationBuilder.CreateIndex(
                name: "IX_ServerUser_UserID",
                schema: "Core",
                table: "ServerUser",
                column: "UserID");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ServerUser",
                schema: "Core");

            migrationBuilder.AddColumn<long>(
                name: "ServerID",
                schema: "Core",
                table: "Users",
                nullable: true);

            migrationBuilder.CreateIndex(
                name: "IX_Users_ServerID",
                schema: "Core",
                table: "Users",
                column: "ServerID");

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Servers_ServerID",
                schema: "Core",
                table: "Users",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
