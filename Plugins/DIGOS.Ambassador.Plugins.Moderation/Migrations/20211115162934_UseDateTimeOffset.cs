// <auto-generated />

#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

using System.Diagnostics.CodeAnalysis;
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DIGOS.Ambassador.Plugins.Moderation.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class UseDateTimeOffset : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ServerModerationSettings_Servers_ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Users_UserID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Users_UserID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Users_UserID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.AlterDatabase()
                .Annotation("Npgsql:PostgresExtension:fuzzystrmatch", ",,");

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "ExpiresOn",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp with time zone",
                nullable: true,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "ExpiresOn",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp with time zone",
                nullable: true,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTimeOffset>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp with time zone",
                nullable: false,
                oldClrType: typeof(DateTime),
                oldType: "timestamp without time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerModerationSettings_Servers_ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Users_UserID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Users_UserID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Users_UserID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ServerModerationSettings_Servers_ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserBans_Users_UserID",
                schema: "ModerationModule",
                table: "UserBans");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserNotes_Users_UserID",
                schema: "ModerationModule",
                table: "UserNotes");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.DropForeignKey(
                name: "FK_UserWarnings_Users_UserID",
                schema: "ModerationModule",
                table: "UserWarnings");

            migrationBuilder.AlterDatabase()
                .OldAnnotation("Npgsql:PostgresExtension:fuzzystrmatch", ",,");

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "ExpiresOn",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp without time zone",
                nullable: true,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTime>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserNotes",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "UpdatedAt",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<DateTime>(
                name: "ExpiresOn",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp without time zone",
                nullable: true,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone",
                oldNullable: true);

            migrationBuilder.AlterColumn<DateTime>(
                name: "CreatedAt",
                schema: "ModerationModule",
                table: "UserBans",
                type: "timestamp without time zone",
                nullable: false,
                oldClrType: typeof(DateTimeOffset),
                oldType: "timestamp with time zone");

            migrationBuilder.AlterColumn<long>(
                name: "AuthorID",
                schema: "ModerationModule",
                table: "UserBans",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AddForeignKey(
                name: "FK_ServerModerationSettings_Servers_ServerID",
                schema: "ModerationModule",
                table: "ServerModerationSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserBans_Users_UserID",
                schema: "ModerationModule",
                table: "UserBans",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserNotes_Users_UserID",
                schema: "ModerationModule",
                table: "UserNotes",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Servers_ServerID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Users_AuthorID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserWarnings_Users_UserID",
                schema: "ModerationModule",
                table: "UserWarnings",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID");
        }
    }
}

