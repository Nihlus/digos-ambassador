// <auto-generated />

#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Characters.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class ResyncModel : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Servers_ServerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "CharacterModule",
                table: "Characters",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<long>(
                name: "OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                type: "bigint",
                nullable: true,
                oldClrType: typeof(long),
                oldType: "bigint");

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Servers_ServerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Servers_ServerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "CharacterModule",
                table: "Characters",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                type: "bigint",
                nullable: false,
                defaultValue: 0L,
                oldClrType: typeof(long),
                oldType: "bigint",
                oldNullable: true);

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Servers_ServerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
