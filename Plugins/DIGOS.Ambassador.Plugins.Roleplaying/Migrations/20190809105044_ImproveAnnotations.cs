// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Roleplaying.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class ImproveAnnotations : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                nullable: false,
                oldClrType: typeof(long),
                oldNullable: true);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                nullable: true,
                oldClrType: typeof(long));

            migrationBuilder.AddForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
