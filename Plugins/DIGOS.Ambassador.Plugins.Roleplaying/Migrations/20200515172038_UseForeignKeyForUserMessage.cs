// <auto-generated />

#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Roleplaying.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class UseForeignKeyForFeedbackMessage : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<long>(
                name: "AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages",
                nullable: false,
                defaultValue: 0L);

            // Resolve the indirect references
            migrationBuilder.Sql
            (
                "update \"RoleplayModule\".\"UserMessages\" " +
                "set \"AuthorID\" = UserEntities.\"ID\" " +
                "from (select distinct on (\"Users\") \"ID\", \"DiscordID\" from \"Core\".\"Users\") " +
                "as UserEntities where \"AuthorDiscordID\" = UserEntities.\"DiscordID\""
            );

            migrationBuilder.DropColumn(
                name: "AuthorDiscordID",
                schema: "RoleplayModule",
                table: "UserMessages");

            migrationBuilder.CreateIndex(
                name: "IX_UserMessages_AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages",
                column: "AuthorID");

            migrationBuilder.AddForeignKey(
                name: "FK_UserMessages_Users_AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages",
                column: "AuthorID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_UserMessages_Users_AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages");

            migrationBuilder.DropIndex(
                name: "IX_UserMessages_AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages");

            migrationBuilder.AddColumn<long>(
                name: "AuthorDiscordID",
                schema: "RoleplayModule",
                table: "UserMessages",
                type: "bigint",
                nullable: false,
                defaultValue: 0L);

            // Resolve the direct references
            migrationBuilder.Sql
            (
                "update \"RoleplayModule\".\"UserMessages\" " +
                "set \"AuthorDiscordID\" = UserEntities.\"DiscordID\" " +
                "from (select distinct on (\"Users\") \"ID\", \"DiscordID\" from \"Core\".\"Users\") " +
                "as UserEntities where \"AuthorID\" = UserEntities.\"ID\""
            );

            migrationBuilder.DropColumn(
                name: "AuthorID",
                schema: "RoleplayModule",
                table: "UserMessages");
        }
    }
}

