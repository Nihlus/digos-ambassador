// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Roleplaying.Migrations
{
    public partial class ConfigureExplicitParticipantMapping : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_Roleplays_RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                nullable: false,
                oldClrType: typeof(long),
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                nullable: false,
                oldClrType: typeof(long),
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                nullable: false,
                oldClrType: typeof(long),
                oldNullable: true);

            migrationBuilder.AlterColumn<long>(
                name: "RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                nullable: false,
                oldClrType: typeof(long),
                oldNullable: true);

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_Roleplays_RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "RoleplayID",
                principalSchema: "RoleplayModule",
                principalTable: "Roleplays",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_Roleplays_RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings");

            migrationBuilder.AlterColumn<long>(
                name: "ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                nullable: true,
                oldClrType: typeof(long));

            migrationBuilder.AlterColumn<long>(
                name: "OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                nullable: true,
                oldClrType: typeof(long));

            migrationBuilder.AlterColumn<long>(
                name: "UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                nullable: true,
                oldClrType: typeof(long));

            migrationBuilder.AlterColumn<long>(
                name: "RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                nullable: true,
                oldClrType: typeof(long));

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_Roleplays_RoleplayID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "RoleplayID",
                principalSchema: "RoleplayModule",
                principalTable: "Roleplays",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerSettings_Servers_ServerID",
                schema: "RoleplayModule",
                table: "ServerSettings",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
