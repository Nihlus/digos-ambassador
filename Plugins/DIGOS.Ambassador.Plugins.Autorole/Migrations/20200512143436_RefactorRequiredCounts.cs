// <auto-generated />

#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Plugins.Autorole.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class RefactorRequiredCounts : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Encode the source type
            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"Discriminator\" = 'MessageCountInGuildCondition' where \"SourceType\" = 0;"
            );

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"Discriminator\" = 'MessageCountInChannelCondition' where \"SourceType\" = 1;"
            );

            migrationBuilder.DropColumn(
                name: "SourceType",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            // Copy the foreign key data
            migrationBuilder.AddColumn<long>(
                name: "AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                nullable: true);

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"AutoroleConfigurationID\" = \"AutoroleID\";"
            );

            // Drop the old keys and create the new indices
            migrationBuilder.DropForeignKey(
                name: "FK_AutoroleConditions_Autoroles_AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.DropIndex(
                name: "IX_AutoroleConditions_AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.DropColumn(
                name: "AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.CreateIndex(
                name: "IX_AutoroleConditions_AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                column: "AutoroleConfigurationID");

            migrationBuilder.AddForeignKey(
                name: "FK_AutoroleConditions_Autoroles_AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                column: "AutoroleConfigurationID",
                principalSchema: "AutoroleModule",
                principalTable: "Autoroles",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            // Add IsEnabled
            migrationBuilder.AddColumn<bool>(
                name: "IsEnabled",
                schema: "AutoroleModule",
                table: "Autoroles",
                nullable: false,
                defaultValue: false);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            // Reencode the source type
            migrationBuilder.AddColumn<int>(
                name: "SourceType",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                type: "integer",
                nullable: true);

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"SourceType\" = 0 where \"Discriminator\" = 'MessageCountInGuildCondition';"
            );

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"SourceType\" = 1 where \"Discriminator\" = 'MessageCountInChannelCondition';"
            );

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"Discriminator\" = 'MessageCountInSourceCondition' where \"Discriminator\" = 'MessageCountInGuildCondition';"
            );

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"Discriminator\" = 'MessageCountInSourceCondition' where \"Discriminator\" = 'MessageCountInChannelCondition';"
            );

            // Restore the foreign keys
            migrationBuilder.AddColumn<long>(
                name: "AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                type: "bigint",
                nullable: true);

            migrationBuilder.Sql
            (
                "update \"AutoroleModule\".\"AutoroleConditions\" set \"AutoroleID\" = \"AutoroleConfigurationID\";"
            );

            // Drop the columns and create the indices
            migrationBuilder.DropForeignKey(
                name: "FK_AutoroleConditions_Autoroles_AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.DropIndex(
                name: "IX_AutoroleConditions_AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.DropColumn(
                name: "AutoroleConfigurationID",
                schema: "AutoroleModule",
                table: "AutoroleConditions");

            migrationBuilder.CreateIndex(
                name: "IX_AutoroleConditions_AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                column: "AutoroleID");

            migrationBuilder.AddForeignKey(
                name: "FK_AutoroleConditions_Autoroles_AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                column: "AutoroleID",
                principalSchema: "AutoroleModule",
                principalTable: "Autoroles",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            // Drop IsEnabled
            migrationBuilder.DropColumn(
                name: "IsEnabled",
                schema: "AutoroleModule",
                table: "Autoroles");
        }
    }
}

