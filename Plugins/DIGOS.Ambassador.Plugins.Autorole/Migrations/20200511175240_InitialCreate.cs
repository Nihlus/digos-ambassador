// <auto-generated />

#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DIGOS.Ambassador.Plugins.Autorole.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class InitialCreate : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "AutoroleModule");

            migrationBuilder.CreateTable(
                name: "Autoroles",
                schema: "AutoroleModule",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    DiscordRoleID = table.Column<long>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Autoroles", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "AutoroleConditions",
                schema: "AutoroleModule",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    AutoroleID = table.Column<long>(nullable: true),
                    Discriminator = table.Column<string>(nullable: false),
                    SourceID = table.Column<long>(nullable: true),
                    SourceType = table.Column<int>(nullable: true),
                    RequiredCount = table.Column<long>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AutoroleConditions", x => x.ID);
                    table.ForeignKey(
                        name: "FK_AutoroleConditions_Autoroles_AutoroleID",
                        column: x => x.AutoroleID,
                        principalSchema: "AutoroleModule",
                        principalTable: "Autoroles",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "IX_AutoroleConditions_AutoroleID",
                schema: "AutoroleModule",
                table: "AutoroleConditions",
                column: "AutoroleID");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "AutoroleConditions",
                schema: "AutoroleModule");

            migrationBuilder.DropTable(
                name: "Autoroles",
                schema: "AutoroleModule");
        }
    }
}

