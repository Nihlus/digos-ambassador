// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

// <auto-generated />
using System;
using DIGOS.Ambassador.Plugins.Kinks.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
#nullable disable
namespace DIGOS.Ambassador.Plugins.Kinks.Migrations
{
    [DbContext(typeof(KinksDatabaseContext))]
    [Migration("20211118183543_UseSnakeCase")]
    partial class UseSnakeCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("KinkModule")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "fuzzystrmatch");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Core.Model.Users.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));
                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bio");
                    b.Property<long>("DiscordID")
                        .HasColumnType("bigint")
                        .HasColumnName("discord_id");
                    b.Property<int?>("Timezone")
                        .HasColumnType("integer")
                        .HasColumnName("timezone");
                    b.HasKey("ID")
                        .HasName("pk_users");
                    b.ToTable("Users", "Core", t => t.ExcludeFromMigrations());
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Kinks.Model.Kink", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));
                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");
                    b.Property<long>("FListID")
                        .HasColumnType("bigint")
                        .HasColumnName("f_list_id");
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");
                    b.HasKey("ID")
                        .HasName("pk_kinks");
                    b.HasIndex("FListID")
                        .IsUnique()
                        .HasDatabaseName("ix_kinks_f_list_id");
                    b.ToTable("Kinks", "KinkModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Kinks.Model.UserKink", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));
                    b.Property<long>("KinkID")
                        .HasColumnType("bigint")
                        .HasColumnName("kink_id");
                    b.Property<int>("Preference")
                        .HasColumnType("integer")
                        .HasColumnName("preference");
                    b.Property<long>("UserID")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");
                    b.HasKey("ID")
                        .HasName("pk_user_kinks");
                    b.HasIndex("KinkID")
                        .HasDatabaseName("ix_user_kinks_kink_id");
                    b.HasIndex("UserID")
                        .HasDatabaseName("ix_user_kinks_user_id");
                    b.ToTable("UserKinks", "KinkModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Kinks.Model.UserKink", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Plugins.Kinks.Model.Kink", "Kink")
                        .WithMany()
                        .HasForeignKey("KinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_kinks_kinks_kink_id");
                    b.HasOne("DIGOS.Ambassador.Plugins.Core.Model.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_kinks_users_user_id");
                    b.Navigation("Kink");
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
